name: Mihomo Smart arm64 Build

on:
  schedule:
    # 每天凌晨 5 点（北京时间），等于 UTC 的 21:00 前一天
    - cron: "0 21 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Authenticate gh CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Fetch asset URL from Prerelease-Alpha
        id: fetch
        run: |
          # 获取 release 的 JSON 数据
          JSON=$(gh release view Prerelease-Alpha --repo vernesong/mihomo --json assets)

          # 提取匹配文件名和下载链接
          ORIGIN_NAME=$(echo "$JSON" | jq -r '.assets[] 
            | select(.name | test("^mihomo-linux-arm64-alpha-smart-.*\\.gz$")) 
            | .name')

          DOWNLOAD_URL=$(echo "$JSON" | jq -r '.assets[] 
            | select(.name | test("^mihomo-linux-arm64-alpha-smart-.*\\.gz$")) 
            | .url')

          echo "Name: $ORIGIN_NAME"
          echo "Download URL: $DOWNLOAD_URL"

          echo "ORIGIN_NAME=$ORIGIN_NAME" >> $GITHUB_ENV
          echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV

      - name: Check if asset already exists in mihomo release
        id: check_asset
        run: |
          EXISTS=$(gh release view mihomo --json assets -q ".assets[].name" | grep -Fx "$ORIGIN_NAME" || true)
          if [ -n "$EXISTS" ]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Download asset
        if: steps.check_asset.outputs.found == 'false'
        run: |
          curl -L -o "$ORIGIN_NAME" "$DOWNLOAD_URL"
          cp "$ORIGIN_NAME" mihomo-linux-arm64-alpha-smart.gz

      - name: Create release with current date tag
        if: steps.check_asset.outputs.found == 'false'
        run: |
          gh release upload mihomo --clobber "$ORIGIN_NAME"
          gh release upload release --clobber mihomo-linux-arm64-alpha-smart.gz

      - name: Clean up old assets in release
        run: |
          TAG=mihomo
          # Get all assets for the geoip tag, sorted by created_at (newest first)
          assets=$(gh api repos/{owner}/{repo}/releases/tags/$TAG --jq '.assets | sort_by(.created_at) | reverse')

          # Count total assets
          asset_count=$(echo "$assets" | jq length)

          # If more than 5 assets, delete the oldest ones
          if [ "$asset_count" -gt 5 ]; then
            echo "Found $asset_count assets, keeping newest 5, deleting the rest"
            echo "$assets" | jq -r '.[5:][] | .name' | while read -r asset_name; do
              echo "Deleting asset name: $asset_name"
              gh release delete-asset $TAG "$asset_name" -y
            done
          else
            echo "Found $asset_count assets (5 or fewer), no assets will be deleted"
          fi
